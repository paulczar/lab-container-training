apiVersion: training.eduk8s.io/v1alpha2
kind: Workshop
metadata:
  name: lab-container-training
spec:
  title: Kubernetes Fundamentals
  description: Workshop on getting started with Kubernetes
  url: https://github.com/paulczar/lab-container-training
  vendor: eduk8s.io
  authors:
    - "Paul Czarkowski"
    - "Jérôme Petazzoni"
  difficulty: beginner
  duration: 8h
  tags:
    - kubernetes
  content:
    # image: paulczar/eduk8s-base:stable
    # image: paulczar/lab-container-training:latest
    files: github.com/paulczar/lab-container-training?ref=austin-devops
  # logo:
  session:
    budget: custom
    resources:
      storage: 1Gi
    applications:
      terminal:
        enabled: true
        layout: split
      console:
        enabled: true
        vendor: octant
      editor:
        enabled: true
      docker:
        enabled: false
    # namespaces:
    #   budget: medium
    objects:
      - kind: ClusterRole
        apiVersion: rbac.authorization.k8s.io/v1
        metadata:
          name: $(session_namespace)-workshop-extra
        rules:
        - apiGroups: ["", "extensions", "apps"]
          resources: ["*"]
          verbs: ["list", "get", "watch"]
        - apiGroups: [""]
          resources: ["nodes"]
          verbs: ["list","get"]
        - apiGroups: ["rbac.authorization.k8s.io"]
          resources: ["*"]
          verbs: ["list"]
      - kind: ClusterRoleBinding
        apiVersion: rbac.authorization.k8s.io/v1
        metadata:
          name: $(session_namespace)-workshop-extra
          namespace: $(session_namespace)
        subjects:
        - kind: ServiceAccount
          namespace: $(workshop_namespace)
          name: $(service_account)
        roleRef:
          kind: ClusterRole
          name: $(session_namespace)-workshop-extra
          apiGroup: rbac.authorization.k8s.io
      - apiVersion: v1
        kind: LimitRange
        metadata:
          annotations:
            resource-budget: custom
          name: resource-limits
          namespace: $(session_namespace)
        spec:
          limits:
          - max:
              cpu: "2"
              memory: 2Gi
            min:
              cpu: 50m
              memory: 32Mi
            type: Pod
          - default:
              cpu: 125m
              memory: 128Mi
            defaultRequest:
              cpu: 50m
              memory: 128Mi
            max:
              cpu: "2"
              memory: 2Gi
            min:
              cpu: 50m
              memory: 32Mi
            type: Container
          - max:
              storage: 5Gi
            min:
              storage: 1Gi
            type: PersistentVolumeClaim
      - apiVersion: v1
        kind: ResourceQuota
        metadata:
          annotations:
            resource-budget: custom
          name: compute-resources
          namespace: $(session_namespace)
        spec:
          hard:
            limits.cpu: "2"
            limits.memory: 2Gi
          scopes:
          - NotTerminating
      - apiVersion: v1
        kind: ResourceQuota
        metadata:
          annotations:
            resource-budget: custom
          name: compute-resources-timebound
          namespace: $(session_namespace)
        spec:
          hard:
            limits.cpu: "2"
            limits.memory: 2Gi
          scopes:
          - Terminating
      - apiVersion: v1
        kind: ResourceQuota
        metadata:
          annotations:
            resource-budget: custom
          name: object-counts
          namespace: $(session_namespace)
        spec:
          hard:
            persistentvolumeclaims: "6"
            replicationcontrollers: "15"
            secrets: "25"
            services: "10"
